image: $IMAGE

stages:
    - test
    - build
    - deploy

test:
    stage: test
    before_script:
        - apt-get update -qq && apt-get install -y -qq
          gcc make cmake curl wget
          python3-all-dev python-virtualenv python3-venv zlib1g-dev libssl-dev libffi-dev valgrind
    script:
        - make test

.many-linux: &many-linux-def
  image: quay.io/pypa/manylinux1_x86_64
  stage: build
  before_script:
      - echo "Nothing to do in before_script"
  artifacts:
      paths:
          - wheelhouse/*.whl
  only:
      - tags

build:many-linux-5:
    <<: *many-linux-def
    script:
        - ./build-wheels.sh . 5

build:many-linux-6:
    <<: *many-linux-def
    script:
        - ./build-wheels.sh . 6

build:many-linux-7:
    <<: *many-linux-def
    script:
        - ./build-wheels.sh . 7

build:many-linux-8:
    <<: *many-linux-def
    script:
        - ./build-wheels.sh . 8

build:sdist:
    stage: build
    before_script:
        - apt-get update -qq && apt-get install -y -qq
          python3-all-dev python-virtualenv
    script:
        - make sdist
    artifacts:
        paths:
            - dist/*.tar.gz

deploy:pypi:
    stage: deploy
    before_script:
        - apt-get update -qq && apt-get install -y -qq
          python3-all-dev python-virtualenv
    script:
        - make build
        - source pypi_build/bin/activate
        - twine upload dist/*.tar.gz wheelhouse/*.whl
    only:
        - tags


# Send all tags matching vX.Y.Z to github (code and release)
push-github:
    stage: deploy
    before_script:
        - apt-get update -qq && apt-get install -y -qq
          git python3-all-dev python3-venv git-lfs
        - mkdir ~/.ssh/
        - cp $RESEARCH_BOT_GH_KEY ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
        - echo -e "Host github.com\n\tStrictHostKeyChecking no\n\tHostname ssh.github.com\n\tPort 443\n\n" > ~/.ssh/config
        - git config --global user.email "research.git@nanoporetech.com"
        - git config --global user.name "ontresearch"
    script:
        # Push master and tag to github
        - git remote add ont ${CI_REPOSITORY_URL} || true
        - git remote add github git@github.com:nanoporetech/${CI_PROJECT_NAME}.git || true
        - git fetch ont dev --tags
        - git checkout ${CI_COMMIT_TAG}
        - git branch -D master || echo "No master branch to delete"
        - git checkout -b master
        - git push -f github master
        - git push github ${CI_COMMIT_TAG}
        # Make a github release page
        - python3 -m venv release_env --prompt "(release) "
        - source release_env/bin/activate
        - pip install pip --upgrade
        - pip install git+https://github.com/epi2me-labs/github_release.git
        - github_release ${CI_PROJECT_NAME} ${CI_COMMIT_TAG} CHANGELOG.md ${RESEARCH_BOT_GH_TOKEN} --artifacts dist/*.tar.gz
    only:
        - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$/
    except:
        - branches
